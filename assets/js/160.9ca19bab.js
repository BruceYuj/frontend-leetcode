(window.webpackJsonp=window.webpackJsonp||[]).push([[160],{527:function(r,e,t){"use strict";t.r(e);var a=t(27),s=Object(a.a)({},(function(){var r=this,e=r.$createElement,t=r._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h1",{attrs:{id:"_1-定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-定义"}},[r._v("#")]),r._v(" 1. 定义")]),r._v(" "),t("p",[r._v("如果图 G（有向图或无向图）中从某一顶点出发遍历所有的边后所形成的路径被称为 eulerian path。如果这条路径为环路，则被成为 eulerian circle。\n具有欧拉回路的图被称为欧拉图（简称为 E 图）。只具有欧拉通路而没有欧拉回路的图被称为半欧拉图。")]),r._v(" "),t("p",[t("strong",[r._v("基图")]),r._v("的定义是：将有向图的所有有向边替换为无向边，所得到的图为原图的基图。")]),r._v(" "),t("h1",{attrs:{id:"_2-定理和推论"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-定理和推论"}},[r._v("#")]),r._v(" 2. 定理和推论")]),r._v(" "),t("p",[r._v("我们分为无向图和有向图来分别讨论：")]),r._v(" "),t("ol",[t("li",[r._v("无向图 G 存在 eulerian path 的充要条件是：G 为连通图并且 G 仅有两个奇度顶点（度数为奇数的顶点）或者没有奇度顶点。 无向图 G 存在 eulerian circle 的充要条件更加限定为没有奇度顶点。")])]),r._v(" "),t("p",[t("strong",[r._v("下面是推论")]),r._v("：")]),r._v(" "),t("ul",[t("li",[r._v("当 G 是仅有两个奇数顶点的连通图时，G 的 eulerian path 一定是以该两个顶点为端点。")]),r._v(" "),t("li",[r._v("当 G 没有奇度顶点的连通图时，G 一定有 eulerian circle。")])]),r._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[r._v("有向图 D 存在 eulerian path 的充要条件也是显而易见的：D 的基图是连通的（D 是弱连通的），并且所有顶点的出度和入度都相等或者只有两个顶点的出度和入度不相等，而这两个顶点中一个顶点的出度与入度之差为 1，另一个为-1。")])]),r._v(" "),t("p",[t("strong",[r._v("可以得到类似的推论")]),r._v("：")]),r._v(" "),t("ul",[t("li",[r._v("如果图D除出入度之差为1和-1的两个顶点之外，其他顶点的出入度都相等时，则D有eulerian path并且以出入度之差为1的作为起点，出入度之差为-1的作为终点。")])]),r._v(" "),t("h1",{attrs:{id:"_3-算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-算法"}},[r._v("#")]),r._v(" 3. 算法")]),r._v(" "),t("h2",{attrs:{id:"dfs直接求解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dfs直接求解"}},[r._v("#")]),r._v(" DFS直接求解")]),r._v(" "),t("ul",[t("li",[r._v("首先我们判断图是否具有 eulerian path")]),r._v(" "),t("li",[r._v("然后从选取的端点进行DFS递归，形成对应的路径")])]),r._v(" "),t("h2",{attrs:{id:"fleury-s-algorithm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fleury-s-algorithm"}},[r._v("#")]),r._v(" Fleury's algorithm")]),r._v(" "),t("h2",{attrs:{id:"hierholzer-s-algorithm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hierholzer-s-algorithm"}},[r._v("#")]),r._v(" Hierholzer's algorithm")]),r._v(" "),t("h1",{attrs:{id:"reference"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[r._v("#")]),r._v(" reference")]),r._v(" "),t("ol",[t("li",[t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Eulerian_path",target:"_blank",rel:"noopener noreferrer"}},[r._v("eulerian path"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/kevin-wayne/algs4/blob/master/src/main/java/edu/princeton/cs/algs4",target:"_blank",rel:"noopener noreferrer"}},[r._v("algorithms 4th code"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=s.exports}}]);